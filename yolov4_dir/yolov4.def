Bootstrap: docker
FROM: nvidia/cuda:10.2-cudnn8-devel-ubuntu18.04
OSVersion: ubuntu:18.04


%help
    Singularity container for running yolov4
    #created based on https://github.com/AlexeyAB/darknet#requirements
    The nvidia driver on my server is 440.118.02, cannot support CUDA > 10.2


%labels
	Maintainer: Lingcao Huang

%environment
    export LC_ALL=C
    export PATH=/usr/local/darknet:$PATH
    export PATH=/usr/local/miniconda3/bin:$PATH

    # don't set GDAL_DATA, if gdal >= 2.5 version, they don't include gcs.csv files.
    export GDAL_DATA=/usr/local/miniconda3/share/gdal

#setup

## %post -c /bin/bash : use bash as default intead of sh
%post
    # avoid setting tzdata
    export DEBIAN_FRONTEND=noninteractive
# prep apt-get and cudnn
    apt-get update && apt-get install -y --no-install-recommends \
    apt-utils

# install requirements
    apt-get update \
  	&& apt-get install -y --no-install-recommends \
	    build-essential \
        libopencv-dev \
        cmake \
        git \
        wget \
        vim \
	  && apt-get clean \
	  && rm -rf /var/lib/apt/lists/*

#    # the default installation on ubuntu 18.04 is python 3.6, too old.
#    ln -s /usr/bin/python3 /usr/bin/python &&  ln -s /usr/bin/pip3 /usr/bin/pip
#
##    pip install conda
#    # install other python packages
#    pip install numpy psutil \
#    && pip install opencv-python rasterio geopandas  \
#    && pip install pyshp==1.2.12 rasterstats \
#    && pip install scikit-image scikit-learn
#
#    # not working, need miniconda or ananconda
##    conda install -c conda-forge -y gdal=2.4.2
#    # clean
##    conda clean -tipy


# install miniconda
    wget --quiet --no-check-certificate https://repo.anaconda.com/miniconda/Miniconda3-py37_4.9.2-Linux-x86_64.sh -O ~/miniconda.sh \
    && /bin/bash ~/miniconda.sh -b -p /usr/local/miniconda3 \
    && rm ~/miniconda.sh \
    && /usr/local/miniconda3/bin/conda clean -tipy

#    # conda clean  -tipsy  # t: tarball, i index-cache p: package  y: Do not ask for confirmation
#    # conda build purge-all # remove source cache files.
#
    export PATH=/usr/local/miniconda3/bin:$PATH
# install python package
    # need to install numpy first
    pip install numpy psutil GPUtil\
    && pip install opencv-python rasterio geopandas  \
    && pip install pyshp==1.2.12 rasterstats \
    && pip install scikit-image scikit-learn

    #This version of GDAL 2.3 clobbering PATH environment variable # https://github.com/OSGeo/gdal/issues/1231
    # breaking any subprocesses that depend, like os.system()
    # we change to gdal2.4, or set export PATH=/unusePath:$PATH. # because it only affects the first path.
#    conda install -y gdal=2.3

    conda install -c conda-forge -y gdal=2.4.2

    # clean
    conda clean -tipy


# install  darknet
    cd /usr/local && \
    git clone https://github.com/AlexeyAB/darknet
    # go into the folder, change makefile to have GPU and OPENCV enabled
    cd darknet
    # use the verion latest commit on March 28, 2021
    git reset --hard 1e3a616ed6cefc517db6c8c106c83de24fad275c

    sed -i 's/OPENCV=0/OPENCV=1/' Makefile \
    && sed -i 's/GPU=0/GPU=1/' Makefile && sed -i 's/CUDNN=0/CUDNN=1/' Makefile \
    && sed -i 's/CUDNN_HALF=0/CUDNN_HALF=1/' Makefile \
    && sed -i 's/LIBSO=0/LIBSO=1/' Makefile \
    && make


