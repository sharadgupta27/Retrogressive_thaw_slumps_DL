#the parameter file for image translate using Generative Adversarial Networks (GAN)

##############################################################
## working folder and other directory setting

# working directory (current folder)
working_root = ./

# the prename for one GAN project (will use "gan_model" as the folder prename)
# gan_dir_pre_name = GAN

##############################################################
## setting for python environment

# the python with corresponding package installed for running GAN
python = ~/programs/miniconda3/envs/pytorch/bin/python

# the GAN script folder, with train.py and generate_image.py
gan_script_dir = ~/codes/PycharmProjects/yghlc_contrastive-unpaired-translation

##############################################################
## data setting

#(1) they should have the same number of "regions_need_image_translation", and their order should match,
# so can form domain A and B pairs. (2) they should equal to or be subset of "training_regions" in main_para.ini
source_domain_regions = training_area_1.ini

# regions (equal to or subset of inference regions) need to image translation using GAN before training,
# for multiple areas, seperate them by using comma (,)
regions_need_image_translation = study_area_1.ini


##############################################################
## other parameters for training and using the GAN

# tile width, height, overlay for split satellite images for training
train_tile_width = 512
train_tile_height = 512
train_overlay_x =  0
train_overlay_y = 0

# tile width, height, overlay for generating satellite images
generate_tile_width = 512
generate_tile_height = 512
generate_overlay_x =  0
generate_overlay_y = 0

# Maximum number of samples allowed per dataset for training. If the dataset directory contains more than max_dataset_size,
# the first "train_max_dataset_size" will be load.
train_max_dataset_size = 1000

# Maximum number of samples allowed per dataset for generating. If the dataset directory contains more than max_dataset_size,
# the first "gen_max_dataset_size" will be used to translate to target domain
gen_max_dataset_size = 1000

# number of epochs with the initial learning rate
n_epochs  = 200

# number of epochs to linearly decay learning rate to zero
n_epochs_decay = 200

# image translation model: cut, cycle_gan, sin_cut, stylegan.
gan_model = cut

